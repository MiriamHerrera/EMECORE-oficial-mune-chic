generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL") // ejemplo: mysql://user:password@localhost:3306/mune_chic
}

model Brand {
  id        Int      @id @default(autoincrement())
  name      String
  logo_url  String?
  created_at DateTime @default(now())
  products  Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?
  price       Decimal
  image_url   String?
  brand_id    Int?
  is_featured Boolean  @default(false)
  status      String   @default("active")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  brand       Brand?   @relation(fields: [brand_id], references: [id])
  details     ProductDetail[]
  categories  ProductCategory[]
  tags        ProductTag[]
}

model ProductDetail {
  id            Int      @id @default(autoincrement())
  productId     Int
  size          String?
  color         String?
  sku           String?
  stock         Int      @default(0)
  priceOverride Decimal? @map("price_override")
  imageUrl      String?  @map("image_url")
  createdAt     DateTime @default(now()) @map("created_at")

  product       Product  @relation(fields: [productId], references: [id])
  inventoryLogs InventoryLog[]
}

model Category {
  id          Int               @id @default(autoincrement())
  name        String
  slug        String?           @unique
  createdAt   DateTime          @default(now()) @map("created_at")

  products    ProductCategory[]
}

model ProductCategory {
  productId   Int
  categoryId  Int

  product     Product  @relation(fields: [productId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId])
}

model Tag {
  id        Int            @id @default(autoincrement())
  name      String
  color     String?
  createdAt DateTime       @default(now()) @map("created_at")

  products  ProductTag[]
}

model ProductTag {
  productId Int
  tagId     Int

  product   Product @relation(fields: [productId], references: [id])
  tag       Tag     @relation(fields: [tagId], references: [id])

  @@id([productId, tagId])
}

model InventoryLog {
  id              Int             @id @default(autoincrement())
  productDetailId Int
  quantity        Int
  type            InventoryType
  description     String?
  createdAt       DateTime        @default(now()) @map("created_at")

  productDetail   ProductDetail   @relation(fields: [productDetailId], references: [id])
}

enum ProductStatus {
  active
  inactive
  draft
}

enum InventoryType {
  entrada
  salida
  ajuste
}